"0","#| label: chembl-functions"
"0",""
"0","# Function to fetch bioactivity data from ChEMBL"
"0","fetch_chembl_bioactivity <- function(target_chembl_id, "
"0","                                     max_compounds = 5000,"
"0","                                     activity_type = ""IC50"") {"
"0","  "
"0","  cli::cli_h2(""Fetching ChEMBL Bioactivity Data"")"
"0","  "
"0","  base_url <- ""https://www.ebi.ac.uk/chembl/api/data/activity.json"""
"0","  "
"0","  all_activities <- list()"
"0","  offset <- 0"
"0","  limit <- 1000"
"0","  "
"0","  # Progress setup"
"0","  handlers(""cli"")"
"0","  "
"0","  with_progress({"
"0","    p <- progressor(steps = ceiling(max_compounds / limit))"
"0","    "
"0","    repeat {"
"0","      # API call with rate limiting"
"0","      Sys.sleep(0.5)  # Respect API rate limits"
"0","      "
"0","      response <- tryCatch({"
"0","        GET("
"0","          base_url,"
"0","          query = list("
"0","            target_chembl_id = target_chembl_id,"
"0","            standard_type = activity_type,"
"0","            limit = limit,"
"0","            offset = offset"
"0","          ),"
"0","          timeout(30)"
"0","        )"
"0","      }, error = function(e) {"
"0","        cli::cli_alert_danger(glue(""API error: {e$message}""))"
"0","        return(NULL)"
"0","      })"
"0","      "
"0","      if(is.null(response) || status_code(response) != 200) {"
"0","        cli::cli_alert_warning(""Failed to fetch data or end of results"")"
"0","        break"
"0","      }"
"0","      "
"0","      # Parse response"
"0","      data <- fromJSON(content(response, ""text"", encoding = ""UTF-8""))"
"0","      "
"0","      if(length(data$activities) == 0) break"
"0","      "
"0","      all_activities[[length(all_activities) + 1]] <- data$activities"
"0","      "
"0","      p(message = sprintf(""Fetched %d compounds"", offset + nrow(data$activities)))"
"0","      "
"0","      offset <- offset + limit"
"0","      "
"0","      if(offset >= max_compounds || length(data$activities) < limit) break"
"0","    }"
"0","  })"
"0","  "
"0","  # Combine all results"
"0","  if(length(all_activities) > 0) {"
"0","    final_data <- bind_rows(all_activities)"
"0","    cli::cli_alert_success(glue(""Retrieved {nrow(final_data)} bioactivity records""))"
"0","    return(final_data)"
"0","  } else {"
"0","    cli::cli_alert_danger(""No data retrieved"")"
"0","    return(NULL)"
"0","  }"
"0","}"
"0",""
"0","# Search for target ChEMBL ID"
"0","search_chembl_target <- function(target_name) {"
"0","  cli::cli_h3(""Searching for target"")"
"0","  "
"0","  base_url <- ""https://www.ebi.ac.uk/chembl/api/data/target/search.json"""
"0","  "
"0","  response <- GET("
"0","    base_url,"
"0","    query = list("
"0","      q = target_name,"
"0","      limit = 10"
"0","    )"
"0","  )"
"0","  "
"0","  if(status_code(response) == 200) {"
"0","    data <- fromJSON(content(response, ""text""))"
"0","    "
"0","    if(length(data$targets) > 0) {"
"0","      targets_df <- data$targets %>%"
"0","        select(target_chembl_id, pref_name, target_type, organism) %>%"
"0","        head(10)"
"0","      "
"0","      print(knitr::kable(targets_df, caption = ""Available Targets""))"
"0","      return(targets_df)"
"0","    }"
"0","  }"
"0","  "
"0","  cli::cli_alert_warning(""No targets found"")"
"0","  return(NULL)"
"0","}"
"0",""
"0","cat(cli::col_green(""âœ“ ChEMBL API functions defined!\n""))"
"1","[32mâœ“ ChEMBL API functions defined!
[39m"
